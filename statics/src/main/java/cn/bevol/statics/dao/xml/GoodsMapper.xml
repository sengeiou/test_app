<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bevol.statics.dao.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="cn.bevol.statics.dao.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="tstamp" jdbcType="INTEGER" property="tstamp" />
    <result column="crdate" jdbcType="INTEGER" property="crdate" />
    <result column="startdate" jdbcType="INTEGER" property="startdate" />
    <result column="overdate" jdbcType="INTEGER" property="overdate" />
    <result column="cruser_id" jdbcType="INTEGER" property="cruserId" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="hidden" jdbcType="INTEGER" property="hidden" />
    <result column="merge_id" jdbcType="INTEGER" property="mergeId" />
    <result column="sorting" jdbcType="REAL" property="sorting" />
    <result column="hit" jdbcType="INTEGER" property="hit" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="top" jdbcType="INTEGER" property="top" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="alias_2" jdbcType="VARCHAR" property="alias2" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="company_english" jdbcType="VARCHAR" property="companyEnglish" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="approval" jdbcType="VARCHAR" property="approval" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="approval_date" jdbcType="INTEGER" property="approvalDate" />
    <result column="validity_date" jdbcType="VARCHAR" property="validityDate" />
    <result column="license" jdbcType="VARCHAR" property="license" />
    <result column="remark3" jdbcType="VARCHAR" property="remark3" />
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="used_num" jdbcType="INTEGER" property="usedNum" />
    <result column="fromz" jdbcType="VARCHAR" property="fromz" />
    <result column="flag" jdbcType="BIT" property="flag" />
    <result column="record_num" jdbcType="VARCHAR" property="recordNum" />
    <result column="record_date" jdbcType="INTEGER" property="recordDate" />
    <result column="is_record" jdbcType="BIT" property="isRecord" />
    <result column="actual_company" jdbcType="VARCHAR" property="actualCompany" />
    <result column="actual_company_address" jdbcType="VARCHAR" property="actualCompanyAddress" />
    <result column="data_type" jdbcType="INTEGER" property="dataType" />
    <result column="china_company" jdbcType="VARCHAR" property="chinaCompany" />
    <result column="china_address" jdbcType="VARCHAR" property="chinaAddress" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="instruction" jdbcType="VARCHAR" property="instruction" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="processid" jdbcType="VARCHAR" property="processid" />
    <result column="ishas" jdbcType="BIT" property="ishas" />
    <result column="iscag" jdbcType="BIT" property="iscag" />
    <result column="skillsUrl" jdbcType="VARCHAR" property="skillsurl" />
    <result column="categoryStr" jdbcType="VARCHAR" property="categorystr" />
    <result column="likecount" jdbcType="INTEGER" property="likecount" />
    <result column="commentcount" jdbcType="INTEGER" property="commentcount" />
    <result column="notlikecount" jdbcType="INTEGER" property="notlikecount" />
    <result column="mid" jdbcType="VARCHAR" property="mid" />
    <result column="ismodify" jdbcType="BIT" property="ismodify" />
    <result column="new_goods_title" jdbcType="VARCHAR" property="newGoodsTitle" />
    <result column="doyenid" jdbcType="INTEGER" property="doyenid" />
    <result column="isdoyenmodify" jdbcType="INTEGER" property="isdoyenmodify" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="capacity" jdbcType="VARCHAR" property="capacity" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="sell_capacity" jdbcType="VARCHAR" property="sellCapacity" />
    <result column="hidden_skin" jdbcType="INTEGER" property="hiddenSkin" />
    <result column="cps_type" jdbcType="VARCHAR" property="cpsType" />
    <result column="price_unit" jdbcType="INTEGER" property="priceUnit" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.bevol.statics.dao.GoodsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="explainz" jdbcType="LONGVARCHAR" property="explainz" />
    <result column="gcsort" jdbcType="LONGVARCHAR" property="gcsort" />
    <result column="tips" jdbcType="LONGVARCHAR" property="tips" />
    <result column="doyencomment" jdbcType="LONGVARCHAR" property="doyencomment" />
    <result column="cps" jdbcType="LONGVARCHAR" property="cps" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, brand_id, tstamp, crdate, startdate, overdate, cruser_id, deleted, hidden, merge_id, 
    sorting, hit, hot, top, title, alias, alias_2, image, category, company, company_english, 
    address, approval, state, approval_date, validity_date, license, remark3, skills, 
    keywords, like_num, used_num, fromz, flag, record_num, record_date, is_record, actual_company, 
    actual_company_address, data_type, china_company, china_address, country, instruction, 
    brand, cname, remark, processid, ishas, iscag, skillsUrl, categoryStr, likecount, 
    commentcount, notlikecount, mid, ismodify, new_goods_title, doyenid, isdoyenmodify, 
    price, capacity, sell_price, sell_capacity, hidden_skin, cps_type, price_unit
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content, explainz, gcsort, tips, doyencomment, cps
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.bevol.statics.dao.GoodsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_goods (brand_id, tstamp, crdate, 
      startdate, overdate, cruser_id, 
      deleted, hidden, merge_id, 
      sorting, hit, hot, top, 
      title, alias, alias_2, 
      image, category, company, 
      company_english, address, approval, 
      state, approval_date, validity_date, 
      license, remark3, skills, 
      keywords, like_num, used_num, 
      fromz, flag, record_num, 
      record_date, is_record, actual_company, 
      actual_company_address, data_type, china_company, 
      china_address, country, instruction, 
      brand, cname, remark, 
      processid, ishas, iscag, skillsUrl, 
      categoryStr, likecount, commentcount, 
      notlikecount, mid, ismodify, 
      new_goods_title, doyenid, isdoyenmodify, 
      price, capacity, sell_price, 
      sell_capacity, hidden_skin, cps_type, 
      price_unit, content, explainz, 
      gcsort, tips, doyencomment, 
      cps)
    values (#{brandId,jdbcType=INTEGER}, #{tstamp,jdbcType=INTEGER}, #{crdate,jdbcType=INTEGER}, 
      #{startdate,jdbcType=INTEGER}, #{overdate,jdbcType=INTEGER}, #{cruserId,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER}, #{hidden,jdbcType=INTEGER}, #{mergeId,jdbcType=INTEGER}, 
      #{sorting,jdbcType=REAL}, #{hit,jdbcType=INTEGER}, #{hot,jdbcType=INTEGER}, #{top,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{alias2,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, 
      #{companyEnglish,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{approval,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{approvalDate,jdbcType=INTEGER}, #{validityDate,jdbcType=VARCHAR}, 
      #{license,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, #{skills,jdbcType=VARCHAR}, 
      #{keywords,jdbcType=VARCHAR}, #{likeNum,jdbcType=INTEGER}, #{usedNum,jdbcType=INTEGER}, 
      #{fromz,jdbcType=VARCHAR}, #{flag,jdbcType=BIT}, #{recordNum,jdbcType=VARCHAR}, 
      #{recordDate,jdbcType=INTEGER}, #{isRecord,jdbcType=BIT}, #{actualCompany,jdbcType=VARCHAR}, 
      #{actualCompanyAddress,jdbcType=VARCHAR}, #{dataType,jdbcType=INTEGER}, #{chinaCompany,jdbcType=VARCHAR}, 
      #{chinaAddress,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{instruction,jdbcType=VARCHAR}, 
      #{brand,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{processid,jdbcType=VARCHAR}, #{ishas,jdbcType=BIT}, #{iscag,jdbcType=BIT}, #{skillsurl,jdbcType=VARCHAR}, 
      #{categorystr,jdbcType=VARCHAR}, #{likecount,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, 
      #{notlikecount,jdbcType=INTEGER}, #{mid,jdbcType=VARCHAR}, #{ismodify,jdbcType=BIT}, 
      #{newGoodsTitle,jdbcType=VARCHAR}, #{doyenid,jdbcType=INTEGER}, #{isdoyenmodify,jdbcType=INTEGER}, 
      #{price,jdbcType=VARCHAR}, #{capacity,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DECIMAL}, 
      #{sellCapacity,jdbcType=VARCHAR}, #{hiddenSkin,jdbcType=INTEGER}, #{cpsType,jdbcType=VARCHAR}, 
      #{priceUnit,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, #{explainz,jdbcType=LONGVARCHAR}, 
      #{gcsort,jdbcType=LONGVARCHAR}, #{tips,jdbcType=LONGVARCHAR}, #{doyencomment,jdbcType=LONGVARCHAR}, 
      #{cps,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bevol.statics.dao.GoodsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="tstamp != null">
        tstamp,
      </if>
      <if test="crdate != null">
        crdate,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="overdate != null">
        overdate,
      </if>
      <if test="cruserId != null">
        cruser_id,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="mergeId != null">
        merge_id,
      </if>
      <if test="sorting != null">
        sorting,
      </if>
      <if test="hit != null">
        hit,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="top != null">
        top,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="alias2 != null">
        alias_2,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="companyEnglish != null">
        company_english,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="approval != null">
        approval,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="approvalDate != null">
        approval_date,
      </if>
      <if test="validityDate != null">
        validity_date,
      </if>
      <if test="license != null">
        license,
      </if>
      <if test="remark3 != null">
        remark3,
      </if>
      <if test="skills != null">
        skills,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="usedNum != null">
        used_num,
      </if>
      <if test="fromz != null">
        fromz,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="recordNum != null">
        record_num,
      </if>
      <if test="recordDate != null">
        record_date,
      </if>
      <if test="isRecord != null">
        is_record,
      </if>
      <if test="actualCompany != null">
        actual_company,
      </if>
      <if test="actualCompanyAddress != null">
        actual_company_address,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="chinaCompany != null">
        china_company,
      </if>
      <if test="chinaAddress != null">
        china_address,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="instruction != null">
        instruction,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="processid != null">
        processid,
      </if>
      <if test="ishas != null">
        ishas,
      </if>
      <if test="iscag != null">
        iscag,
      </if>
      <if test="skillsurl != null">
        skillsUrl,
      </if>
      <if test="categorystr != null">
        categoryStr,
      </if>
      <if test="likecount != null">
        likecount,
      </if>
      <if test="commentcount != null">
        commentcount,
      </if>
      <if test="notlikecount != null">
        notlikecount,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="ismodify != null">
        ismodify,
      </if>
      <if test="newGoodsTitle != null">
        new_goods_title,
      </if>
      <if test="doyenid != null">
        doyenid,
      </if>
      <if test="isdoyenmodify != null">
        isdoyenmodify,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="capacity != null">
        capacity,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="sellCapacity != null">
        sell_capacity,
      </if>
      <if test="hiddenSkin != null">
        hidden_skin,
      </if>
      <if test="cpsType != null">
        cps_type,
      </if>
      <if test="priceUnit != null">
        price_unit,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="explainz != null">
        explainz,
      </if>
      <if test="gcsort != null">
        gcsort,
      </if>
      <if test="tips != null">
        tips,
      </if>
      <if test="doyencomment != null">
        doyencomment,
      </if>
      <if test="cps != null">
        cps,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="tstamp != null">
        #{tstamp,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        #{crdate,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=INTEGER},
      </if>
      <if test="overdate != null">
        #{overdate,jdbcType=INTEGER},
      </if>
      <if test="cruserId != null">
        #{cruserId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=INTEGER},
      </if>
      <if test="mergeId != null">
        #{mergeId,jdbcType=INTEGER},
      </if>
      <if test="sorting != null">
        #{sorting,jdbcType=REAL},
      </if>
      <if test="hit != null">
        #{hit,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        #{top,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="alias2 != null">
        #{alias2,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="companyEnglish != null">
        #{companyEnglish,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="approval != null">
        #{approval,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="approvalDate != null">
        #{approvalDate,jdbcType=INTEGER},
      </if>
      <if test="validityDate != null">
        #{validityDate,jdbcType=VARCHAR},
      </if>
      <if test="license != null">
        #{license,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="skills != null">
        #{skills,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="usedNum != null">
        #{usedNum,jdbcType=INTEGER},
      </if>
      <if test="fromz != null">
        #{fromz,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=BIT},
      </if>
      <if test="recordNum != null">
        #{recordNum,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        #{recordDate,jdbcType=INTEGER},
      </if>
      <if test="isRecord != null">
        #{isRecord,jdbcType=BIT},
      </if>
      <if test="actualCompany != null">
        #{actualCompany,jdbcType=VARCHAR},
      </if>
      <if test="actualCompanyAddress != null">
        #{actualCompanyAddress,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="chinaCompany != null">
        #{chinaCompany,jdbcType=VARCHAR},
      </if>
      <if test="chinaAddress != null">
        #{chinaAddress,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null">
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="processid != null">
        #{processid,jdbcType=VARCHAR},
      </if>
      <if test="ishas != null">
        #{ishas,jdbcType=BIT},
      </if>
      <if test="iscag != null">
        #{iscag,jdbcType=BIT},
      </if>
      <if test="skillsurl != null">
        #{skillsurl,jdbcType=VARCHAR},
      </if>
      <if test="categorystr != null">
        #{categorystr,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null">
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="notlikecount != null">
        #{notlikecount,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="ismodify != null">
        #{ismodify,jdbcType=BIT},
      </if>
      <if test="newGoodsTitle != null">
        #{newGoodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="doyenid != null">
        #{doyenid,jdbcType=INTEGER},
      </if>
      <if test="isdoyenmodify != null">
        #{isdoyenmodify,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="capacity != null">
        #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellCapacity != null">
        #{sellCapacity,jdbcType=VARCHAR},
      </if>
      <if test="hiddenSkin != null">
        #{hiddenSkin,jdbcType=INTEGER},
      </if>
      <if test="cpsType != null">
        #{cpsType,jdbcType=VARCHAR},
      </if>
      <if test="priceUnit != null">
        #{priceUnit,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="explainz != null">
        #{explainz,jdbcType=LONGVARCHAR},
      </if>
      <if test="gcsort != null">
        #{gcsort,jdbcType=LONGVARCHAR},
      </if>
      <if test="tips != null">
        #{tips,jdbcType=LONGVARCHAR},
      </if>
      <if test="doyencomment != null">
        #{doyencomment,jdbcType=LONGVARCHAR},
      </if>
      <if test="cps != null">
        #{cps,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bevol.statics.dao.GoodsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.tstamp != null">
        tstamp = #{record.tstamp,jdbcType=INTEGER},
      </if>
      <if test="record.crdate != null">
        crdate = #{record.crdate,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=INTEGER},
      </if>
      <if test="record.overdate != null">
        overdate = #{record.overdate,jdbcType=INTEGER},
      </if>
      <if test="record.cruserId != null">
        cruser_id = #{record.cruserId,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.hidden != null">
        hidden = #{record.hidden,jdbcType=INTEGER},
      </if>
      <if test="record.mergeId != null">
        merge_id = #{record.mergeId,jdbcType=INTEGER},
      </if>
      <if test="record.sorting != null">
        sorting = #{record.sorting,jdbcType=REAL},
      </if>
      <if test="record.hit != null">
        hit = #{record.hit,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.top != null">
        top = #{record.top,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.alias2 != null">
        alias_2 = #{record.alias2,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.companyEnglish != null">
        company_english = #{record.companyEnglish,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.approval != null">
        approval = #{record.approval,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.approvalDate != null">
        approval_date = #{record.approvalDate,jdbcType=INTEGER},
      </if>
      <if test="record.validityDate != null">
        validity_date = #{record.validityDate,jdbcType=VARCHAR},
      </if>
      <if test="record.license != null">
        license = #{record.license,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null">
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.skills != null">
        skills = #{record.skills,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.usedNum != null">
        used_num = #{record.usedNum,jdbcType=INTEGER},
      </if>
      <if test="record.fromz != null">
        fromz = #{record.fromz,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=BIT},
      </if>
      <if test="record.recordNum != null">
        record_num = #{record.recordNum,jdbcType=VARCHAR},
      </if>
      <if test="record.recordDate != null">
        record_date = #{record.recordDate,jdbcType=INTEGER},
      </if>
      <if test="record.isRecord != null">
        is_record = #{record.isRecord,jdbcType=BIT},
      </if>
      <if test="record.actualCompany != null">
        actual_company = #{record.actualCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.actualCompanyAddress != null">
        actual_company_address = #{record.actualCompanyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=INTEGER},
      </if>
      <if test="record.chinaCompany != null">
        china_company = #{record.chinaCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.chinaAddress != null">
        china_address = #{record.chinaAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.instruction != null">
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.processid != null">
        processid = #{record.processid,jdbcType=VARCHAR},
      </if>
      <if test="record.ishas != null">
        ishas = #{record.ishas,jdbcType=BIT},
      </if>
      <if test="record.iscag != null">
        iscag = #{record.iscag,jdbcType=BIT},
      </if>
      <if test="record.skillsurl != null">
        skillsUrl = #{record.skillsurl,jdbcType=VARCHAR},
      </if>
      <if test="record.categorystr != null">
        categoryStr = #{record.categorystr,jdbcType=VARCHAR},
      </if>
      <if test="record.likecount != null">
        likecount = #{record.likecount,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null">
        commentcount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.notlikecount != null">
        notlikecount = #{record.notlikecount,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=VARCHAR},
      </if>
      <if test="record.ismodify != null">
        ismodify = #{record.ismodify,jdbcType=BIT},
      </if>
      <if test="record.newGoodsTitle != null">
        new_goods_title = #{record.newGoodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.doyenid != null">
        doyenid = #{record.doyenid,jdbcType=INTEGER},
      </if>
      <if test="record.isdoyenmodify != null">
        isdoyenmodify = #{record.isdoyenmodify,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.capacity != null">
        capacity = #{record.capacity,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellCapacity != null">
        sell_capacity = #{record.sellCapacity,jdbcType=VARCHAR},
      </if>
      <if test="record.hiddenSkin != null">
        hidden_skin = #{record.hiddenSkin,jdbcType=INTEGER},
      </if>
      <if test="record.cpsType != null">
        cps_type = #{record.cpsType,jdbcType=VARCHAR},
      </if>
      <if test="record.priceUnit != null">
        price_unit = #{record.priceUnit,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.explainz != null">
        explainz = #{record.explainz,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.gcsort != null">
        gcsort = #{record.gcsort,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tips != null">
        tips = #{record.tips,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.doyencomment != null">
        doyencomment = #{record.doyencomment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cps != null">
        cps = #{record.cps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    set id = #{record.id,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      tstamp = #{record.tstamp,jdbcType=INTEGER},
      crdate = #{record.crdate,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=INTEGER},
      overdate = #{record.overdate,jdbcType=INTEGER},
      cruser_id = #{record.cruserId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER},
      hidden = #{record.hidden,jdbcType=INTEGER},
      merge_id = #{record.mergeId,jdbcType=INTEGER},
      sorting = #{record.sorting,jdbcType=REAL},
      hit = #{record.hit,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      alias_2 = #{record.alias2,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      company_english = #{record.companyEnglish,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      approval = #{record.approval,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      approval_date = #{record.approvalDate,jdbcType=INTEGER},
      validity_date = #{record.validityDate,jdbcType=VARCHAR},
      license = #{record.license,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      skills = #{record.skills,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      used_num = #{record.usedNum,jdbcType=INTEGER},
      fromz = #{record.fromz,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=BIT},
      record_num = #{record.recordNum,jdbcType=VARCHAR},
      record_date = #{record.recordDate,jdbcType=INTEGER},
      is_record = #{record.isRecord,jdbcType=BIT},
      actual_company = #{record.actualCompany,jdbcType=VARCHAR},
      actual_company_address = #{record.actualCompanyAddress,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=INTEGER},
      china_company = #{record.chinaCompany,jdbcType=VARCHAR},
      china_address = #{record.chinaAddress,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      processid = #{record.processid,jdbcType=VARCHAR},
      ishas = #{record.ishas,jdbcType=BIT},
      iscag = #{record.iscag,jdbcType=BIT},
      skillsUrl = #{record.skillsurl,jdbcType=VARCHAR},
      categoryStr = #{record.categorystr,jdbcType=VARCHAR},
      likecount = #{record.likecount,jdbcType=INTEGER},
      commentcount = #{record.commentcount,jdbcType=INTEGER},
      notlikecount = #{record.notlikecount,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=VARCHAR},
      ismodify = #{record.ismodify,jdbcType=BIT},
      new_goods_title = #{record.newGoodsTitle,jdbcType=VARCHAR},
      doyenid = #{record.doyenid,jdbcType=INTEGER},
      isdoyenmodify = #{record.isdoyenmodify,jdbcType=INTEGER},
      price = #{record.price,jdbcType=VARCHAR},
      capacity = #{record.capacity,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      sell_capacity = #{record.sellCapacity,jdbcType=VARCHAR},
      hidden_skin = #{record.hiddenSkin,jdbcType=INTEGER},
      cps_type = #{record.cpsType,jdbcType=VARCHAR},
      price_unit = #{record.priceUnit,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      explainz = #{record.explainz,jdbcType=LONGVARCHAR},
      gcsort = #{record.gcsort,jdbcType=LONGVARCHAR},
      tips = #{record.tips,jdbcType=LONGVARCHAR},
      doyencomment = #{record.doyencomment,jdbcType=LONGVARCHAR},
      cps = #{record.cps,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    set id = #{record.id,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      tstamp = #{record.tstamp,jdbcType=INTEGER},
      crdate = #{record.crdate,jdbcType=INTEGER},
      startdate = #{record.startdate,jdbcType=INTEGER},
      overdate = #{record.overdate,jdbcType=INTEGER},
      cruser_id = #{record.cruserId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER},
      hidden = #{record.hidden,jdbcType=INTEGER},
      merge_id = #{record.mergeId,jdbcType=INTEGER},
      sorting = #{record.sorting,jdbcType=REAL},
      hit = #{record.hit,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      alias_2 = #{record.alias2,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      company_english = #{record.companyEnglish,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      approval = #{record.approval,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      approval_date = #{record.approvalDate,jdbcType=INTEGER},
      validity_date = #{record.validityDate,jdbcType=VARCHAR},
      license = #{record.license,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      skills = #{record.skills,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      used_num = #{record.usedNum,jdbcType=INTEGER},
      fromz = #{record.fromz,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=BIT},
      record_num = #{record.recordNum,jdbcType=VARCHAR},
      record_date = #{record.recordDate,jdbcType=INTEGER},
      is_record = #{record.isRecord,jdbcType=BIT},
      actual_company = #{record.actualCompany,jdbcType=VARCHAR},
      actual_company_address = #{record.actualCompanyAddress,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=INTEGER},
      china_company = #{record.chinaCompany,jdbcType=VARCHAR},
      china_address = #{record.chinaAddress,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      processid = #{record.processid,jdbcType=VARCHAR},
      ishas = #{record.ishas,jdbcType=BIT},
      iscag = #{record.iscag,jdbcType=BIT},
      skillsUrl = #{record.skillsurl,jdbcType=VARCHAR},
      categoryStr = #{record.categorystr,jdbcType=VARCHAR},
      likecount = #{record.likecount,jdbcType=INTEGER},
      commentcount = #{record.commentcount,jdbcType=INTEGER},
      notlikecount = #{record.notlikecount,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=VARCHAR},
      ismodify = #{record.ismodify,jdbcType=BIT},
      new_goods_title = #{record.newGoodsTitle,jdbcType=VARCHAR},
      doyenid = #{record.doyenid,jdbcType=INTEGER},
      isdoyenmodify = #{record.isdoyenmodify,jdbcType=INTEGER},
      price = #{record.price,jdbcType=VARCHAR},
      capacity = #{record.capacity,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      sell_capacity = #{record.sellCapacity,jdbcType=VARCHAR},
      hidden_skin = #{record.hiddenSkin,jdbcType=INTEGER},
      cps_type = #{record.cpsType,jdbcType=VARCHAR},
      price_unit = #{record.priceUnit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bevol.statics.dao.GoodsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    <set>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="tstamp != null">
        tstamp = #{tstamp,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        crdate = #{crdate,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=INTEGER},
      </if>
      <if test="overdate != null">
        overdate = #{overdate,jdbcType=INTEGER},
      </if>
      <if test="cruserId != null">
        cruser_id = #{cruserId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=INTEGER},
      </if>
      <if test="mergeId != null">
        merge_id = #{mergeId,jdbcType=INTEGER},
      </if>
      <if test="sorting != null">
        sorting = #{sorting,jdbcType=REAL},
      </if>
      <if test="hit != null">
        hit = #{hit,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        top = #{top,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="alias2 != null">
        alias_2 = #{alias2,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="companyEnglish != null">
        company_english = #{companyEnglish,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="approval != null">
        approval = #{approval,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="approvalDate != null">
        approval_date = #{approvalDate,jdbcType=INTEGER},
      </if>
      <if test="validityDate != null">
        validity_date = #{validityDate,jdbcType=VARCHAR},
      </if>
      <if test="license != null">
        license = #{license,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="skills != null">
        skills = #{skills,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="usedNum != null">
        used_num = #{usedNum,jdbcType=INTEGER},
      </if>
      <if test="fromz != null">
        fromz = #{fromz,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="recordNum != null">
        record_num = #{recordNum,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        record_date = #{recordDate,jdbcType=INTEGER},
      </if>
      <if test="isRecord != null">
        is_record = #{isRecord,jdbcType=BIT},
      </if>
      <if test="actualCompany != null">
        actual_company = #{actualCompany,jdbcType=VARCHAR},
      </if>
      <if test="actualCompanyAddress != null">
        actual_company_address = #{actualCompanyAddress,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=INTEGER},
      </if>
      <if test="chinaCompany != null">
        china_company = #{chinaCompany,jdbcType=VARCHAR},
      </if>
      <if test="chinaAddress != null">
        china_address = #{chinaAddress,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null">
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="processid != null">
        processid = #{processid,jdbcType=VARCHAR},
      </if>
      <if test="ishas != null">
        ishas = #{ishas,jdbcType=BIT},
      </if>
      <if test="iscag != null">
        iscag = #{iscag,jdbcType=BIT},
      </if>
      <if test="skillsurl != null">
        skillsUrl = #{skillsurl,jdbcType=VARCHAR},
      </if>
      <if test="categorystr != null">
        categoryStr = #{categorystr,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null">
        likecount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        commentcount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="notlikecount != null">
        notlikecount = #{notlikecount,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="ismodify != null">
        ismodify = #{ismodify,jdbcType=BIT},
      </if>
      <if test="newGoodsTitle != null">
        new_goods_title = #{newGoodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="doyenid != null">
        doyenid = #{doyenid,jdbcType=INTEGER},
      </if>
      <if test="isdoyenmodify != null">
        isdoyenmodify = #{isdoyenmodify,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="capacity != null">
        capacity = #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellCapacity != null">
        sell_capacity = #{sellCapacity,jdbcType=VARCHAR},
      </if>
      <if test="hiddenSkin != null">
        hidden_skin = #{hiddenSkin,jdbcType=INTEGER},
      </if>
      <if test="cpsType != null">
        cps_type = #{cpsType,jdbcType=VARCHAR},
      </if>
      <if test="priceUnit != null">
        price_unit = #{priceUnit,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="explainz != null">
        explainz = #{explainz,jdbcType=LONGVARCHAR},
      </if>
      <if test="gcsort != null">
        gcsort = #{gcsort,jdbcType=LONGVARCHAR},
      </if>
      <if test="tips != null">
        tips = #{tips,jdbcType=LONGVARCHAR},
      </if>
      <if test="doyencomment != null">
        doyencomment = #{doyencomment,jdbcType=LONGVARCHAR},
      </if>
      <if test="cps != null">
        cps = #{cps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bevol.statics.dao.GoodsWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    set brand_id = #{brandId,jdbcType=INTEGER},
      tstamp = #{tstamp,jdbcType=INTEGER},
      crdate = #{crdate,jdbcType=INTEGER},
      startdate = #{startdate,jdbcType=INTEGER},
      overdate = #{overdate,jdbcType=INTEGER},
      cruser_id = #{cruserId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      hidden = #{hidden,jdbcType=INTEGER},
      merge_id = #{mergeId,jdbcType=INTEGER},
      sorting = #{sorting,jdbcType=REAL},
      hit = #{hit,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      alias_2 = #{alias2,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      company_english = #{companyEnglish,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      approval = #{approval,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      approval_date = #{approvalDate,jdbcType=INTEGER},
      validity_date = #{validityDate,jdbcType=VARCHAR},
      license = #{license,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      skills = #{skills,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      used_num = #{usedNum,jdbcType=INTEGER},
      fromz = #{fromz,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=BIT},
      record_num = #{recordNum,jdbcType=VARCHAR},
      record_date = #{recordDate,jdbcType=INTEGER},
      is_record = #{isRecord,jdbcType=BIT},
      actual_company = #{actualCompany,jdbcType=VARCHAR},
      actual_company_address = #{actualCompanyAddress,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=INTEGER},
      china_company = #{chinaCompany,jdbcType=VARCHAR},
      china_address = #{chinaAddress,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      instruction = #{instruction,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      processid = #{processid,jdbcType=VARCHAR},
      ishas = #{ishas,jdbcType=BIT},
      iscag = #{iscag,jdbcType=BIT},
      skillsUrl = #{skillsurl,jdbcType=VARCHAR},
      categoryStr = #{categorystr,jdbcType=VARCHAR},
      likecount = #{likecount,jdbcType=INTEGER},
      commentcount = #{commentcount,jdbcType=INTEGER},
      notlikecount = #{notlikecount,jdbcType=INTEGER},
      mid = #{mid,jdbcType=VARCHAR},
      ismodify = #{ismodify,jdbcType=BIT},
      new_goods_title = #{newGoodsTitle,jdbcType=VARCHAR},
      doyenid = #{doyenid,jdbcType=INTEGER},
      isdoyenmodify = #{isdoyenmodify,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      capacity = #{capacity,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      sell_capacity = #{sellCapacity,jdbcType=VARCHAR},
      hidden_skin = #{hiddenSkin,jdbcType=INTEGER},
      cps_type = #{cpsType,jdbcType=VARCHAR},
      price_unit = #{priceUnit,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      explainz = #{explainz,jdbcType=LONGVARCHAR},
      gcsort = #{gcsort,jdbcType=LONGVARCHAR},
      tips = #{tips,jdbcType=LONGVARCHAR},
      doyencomment = #{doyencomment,jdbcType=LONGVARCHAR},
      cps = #{cps,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bevol.statics.dao.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_goods
    set brand_id = #{brandId,jdbcType=INTEGER},
      tstamp = #{tstamp,jdbcType=INTEGER},
      crdate = #{crdate,jdbcType=INTEGER},
      startdate = #{startdate,jdbcType=INTEGER},
      overdate = #{overdate,jdbcType=INTEGER},
      cruser_id = #{cruserId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      hidden = #{hidden,jdbcType=INTEGER},
      merge_id = #{mergeId,jdbcType=INTEGER},
      sorting = #{sorting,jdbcType=REAL},
      hit = #{hit,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      alias_2 = #{alias2,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      company_english = #{companyEnglish,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      approval = #{approval,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      approval_date = #{approvalDate,jdbcType=INTEGER},
      validity_date = #{validityDate,jdbcType=VARCHAR},
      license = #{license,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      skills = #{skills,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      used_num = #{usedNum,jdbcType=INTEGER},
      fromz = #{fromz,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=BIT},
      record_num = #{recordNum,jdbcType=VARCHAR},
      record_date = #{recordDate,jdbcType=INTEGER},
      is_record = #{isRecord,jdbcType=BIT},
      actual_company = #{actualCompany,jdbcType=VARCHAR},
      actual_company_address = #{actualCompanyAddress,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=INTEGER},
      china_company = #{chinaCompany,jdbcType=VARCHAR},
      china_address = #{chinaAddress,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      instruction = #{instruction,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      processid = #{processid,jdbcType=VARCHAR},
      ishas = #{ishas,jdbcType=BIT},
      iscag = #{iscag,jdbcType=BIT},
      skillsUrl = #{skillsurl,jdbcType=VARCHAR},
      categoryStr = #{categorystr,jdbcType=VARCHAR},
      likecount = #{likecount,jdbcType=INTEGER},
      commentcount = #{commentcount,jdbcType=INTEGER},
      notlikecount = #{notlikecount,jdbcType=INTEGER},
      mid = #{mid,jdbcType=VARCHAR},
      ismodify = #{ismodify,jdbcType=BIT},
      new_goods_title = #{newGoodsTitle,jdbcType=VARCHAR},
      doyenid = #{doyenid,jdbcType=INTEGER},
      isdoyenmodify = #{isdoyenmodify,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      capacity = #{capacity,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      sell_capacity = #{sellCapacity,jdbcType=VARCHAR},
      hidden_skin = #{hiddenSkin,jdbcType=INTEGER},
      cps_type = #{cpsType,jdbcType=VARCHAR},
      price_unit = #{priceUnit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_goods
    (brand_id, tstamp, crdate, startdate, overdate, cruser_id, deleted, hidden, merge_id, 
      sorting, hit, hot, top, title, alias, alias_2, image, category, company, company_english, 
      address, approval, state, approval_date, validity_date, license, remark3, skills, 
      keywords, like_num, used_num, fromz, flag, record_num, record_date, is_record, 
      actual_company, actual_company_address, data_type, china_company, china_address, 
      country, instruction, brand, cname, remark, processid, ishas, iscag, skillsUrl, 
      categoryStr, likecount, commentcount, notlikecount, mid, ismodify, new_goods_title, 
      doyenid, isdoyenmodify, price, capacity, sell_price, sell_capacity, hidden_skin, 
      cps_type, price_unit, content, explainz, gcsort, tips, doyencomment, cps)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.brandId,jdbcType=INTEGER}, #{item.tstamp,jdbcType=INTEGER}, #{item.crdate,jdbcType=INTEGER}, 
        #{item.startdate,jdbcType=INTEGER}, #{item.overdate,jdbcType=INTEGER}, #{item.cruserId,jdbcType=INTEGER}, 
        #{item.deleted,jdbcType=INTEGER}, #{item.hidden,jdbcType=INTEGER}, #{item.mergeId,jdbcType=INTEGER}, 
        #{item.sorting,jdbcType=REAL}, #{item.hit,jdbcType=INTEGER}, #{item.hot,jdbcType=INTEGER}, 
        #{item.top,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, #{item.alias,jdbcType=VARCHAR}, 
        #{item.alias2,jdbcType=VARCHAR}, #{item.image,jdbcType=VARCHAR}, #{item.category,jdbcType=INTEGER}, 
        #{item.company,jdbcType=VARCHAR}, #{item.companyEnglish,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, 
        #{item.approval,jdbcType=VARCHAR}, #{item.state,jdbcType=INTEGER}, #{item.approvalDate,jdbcType=INTEGER}, 
        #{item.validityDate,jdbcType=VARCHAR}, #{item.license,jdbcType=VARCHAR}, #{item.remark3,jdbcType=VARCHAR}, 
        #{item.skills,jdbcType=VARCHAR}, #{item.keywords,jdbcType=VARCHAR}, #{item.likeNum,jdbcType=INTEGER}, 
        #{item.usedNum,jdbcType=INTEGER}, #{item.fromz,jdbcType=VARCHAR}, #{item.flag,jdbcType=BIT}, 
        #{item.recordNum,jdbcType=VARCHAR}, #{item.recordDate,jdbcType=INTEGER}, #{item.isRecord,jdbcType=BIT}, 
        #{item.actualCompany,jdbcType=VARCHAR}, #{item.actualCompanyAddress,jdbcType=VARCHAR}, 
        #{item.dataType,jdbcType=INTEGER}, #{item.chinaCompany,jdbcType=VARCHAR}, #{item.chinaAddress,jdbcType=VARCHAR}, 
        #{item.country,jdbcType=VARCHAR}, #{item.instruction,jdbcType=VARCHAR}, #{item.brand,jdbcType=VARCHAR}, 
        #{item.cname,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.processid,jdbcType=VARCHAR}, 
        #{item.ishas,jdbcType=BIT}, #{item.iscag,jdbcType=BIT}, #{item.skillsurl,jdbcType=VARCHAR}, 
        #{item.categorystr,jdbcType=VARCHAR}, #{item.likecount,jdbcType=INTEGER}, #{item.commentcount,jdbcType=INTEGER}, 
        #{item.notlikecount,jdbcType=INTEGER}, #{item.mid,jdbcType=VARCHAR}, #{item.ismodify,jdbcType=BIT}, 
        #{item.newGoodsTitle,jdbcType=VARCHAR}, #{item.doyenid,jdbcType=INTEGER}, #{item.isdoyenmodify,jdbcType=INTEGER}, 
        #{item.price,jdbcType=VARCHAR}, #{item.capacity,jdbcType=VARCHAR}, #{item.sellPrice,jdbcType=DECIMAL}, 
        #{item.sellCapacity,jdbcType=VARCHAR}, #{item.hiddenSkin,jdbcType=INTEGER}, #{item.cpsType,jdbcType=VARCHAR}, 
        #{item.priceUnit,jdbcType=INTEGER}, #{item.content,jdbcType=LONGVARCHAR}, #{item.explainz,jdbcType=LONGVARCHAR}, 
        #{item.gcsort,jdbcType=LONGVARCHAR}, #{item.tips,jdbcType=LONGVARCHAR}, #{item.doyencomment,jdbcType=LONGVARCHAR}, 
        #{item.cps,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_goods (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'brand_id' == column.value">
          #{item.brandId,jdbcType=INTEGER}
        </if>
        <if test="'tstamp' == column.value">
          #{item.tstamp,jdbcType=INTEGER}
        </if>
        <if test="'crdate' == column.value">
          #{item.crdate,jdbcType=INTEGER}
        </if>
        <if test="'startdate' == column.value">
          #{item.startdate,jdbcType=INTEGER}
        </if>
        <if test="'overdate' == column.value">
          #{item.overdate,jdbcType=INTEGER}
        </if>
        <if test="'cruser_id' == column.value">
          #{item.cruserId,jdbcType=INTEGER}
        </if>
        <if test="'deleted' == column.value">
          #{item.deleted,jdbcType=INTEGER}
        </if>
        <if test="'hidden' == column.value">
          #{item.hidden,jdbcType=INTEGER}
        </if>
        <if test="'merge_id' == column.value">
          #{item.mergeId,jdbcType=INTEGER}
        </if>
        <if test="'sorting' == column.value">
          #{item.sorting,jdbcType=REAL}
        </if>
        <if test="'hit' == column.value">
          #{item.hit,jdbcType=INTEGER}
        </if>
        <if test="'hot' == column.value">
          #{item.hot,jdbcType=INTEGER}
        </if>
        <if test="'top' == column.value">
          #{item.top,jdbcType=INTEGER}
        </if>
        <if test="'title' == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'alias' == column.value">
          #{item.alias,jdbcType=VARCHAR}
        </if>
        <if test="'alias_2' == column.value">
          #{item.alias2,jdbcType=VARCHAR}
        </if>
        <if test="'image' == column.value">
          #{item.image,jdbcType=VARCHAR}
        </if>
        <if test="'category' == column.value">
          #{item.category,jdbcType=INTEGER}
        </if>
        <if test="'company' == column.value">
          #{item.company,jdbcType=VARCHAR}
        </if>
        <if test="'company_english' == column.value">
          #{item.companyEnglish,jdbcType=VARCHAR}
        </if>
        <if test="'address' == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'approval' == column.value">
          #{item.approval,jdbcType=VARCHAR}
        </if>
        <if test="'state' == column.value">
          #{item.state,jdbcType=INTEGER}
        </if>
        <if test="'approval_date' == column.value">
          #{item.approvalDate,jdbcType=INTEGER}
        </if>
        <if test="'validity_date' == column.value">
          #{item.validityDate,jdbcType=VARCHAR}
        </if>
        <if test="'license' == column.value">
          #{item.license,jdbcType=VARCHAR}
        </if>
        <if test="'remark3' == column.value">
          #{item.remark3,jdbcType=VARCHAR}
        </if>
        <if test="'skills' == column.value">
          #{item.skills,jdbcType=VARCHAR}
        </if>
        <if test="'keywords' == column.value">
          #{item.keywords,jdbcType=VARCHAR}
        </if>
        <if test="'like_num' == column.value">
          #{item.likeNum,jdbcType=INTEGER}
        </if>
        <if test="'used_num' == column.value">
          #{item.usedNum,jdbcType=INTEGER}
        </if>
        <if test="'fromz' == column.value">
          #{item.fromz,jdbcType=VARCHAR}
        </if>
        <if test="'flag' == column.value">
          #{item.flag,jdbcType=BIT}
        </if>
        <if test="'record_num' == column.value">
          #{item.recordNum,jdbcType=VARCHAR}
        </if>
        <if test="'record_date' == column.value">
          #{item.recordDate,jdbcType=INTEGER}
        </if>
        <if test="'is_record' == column.value">
          #{item.isRecord,jdbcType=BIT}
        </if>
        <if test="'actual_company' == column.value">
          #{item.actualCompany,jdbcType=VARCHAR}
        </if>
        <if test="'actual_company_address' == column.value">
          #{item.actualCompanyAddress,jdbcType=VARCHAR}
        </if>
        <if test="'data_type' == column.value">
          #{item.dataType,jdbcType=INTEGER}
        </if>
        <if test="'china_company' == column.value">
          #{item.chinaCompany,jdbcType=VARCHAR}
        </if>
        <if test="'china_address' == column.value">
          #{item.chinaAddress,jdbcType=VARCHAR}
        </if>
        <if test="'country' == column.value">
          #{item.country,jdbcType=VARCHAR}
        </if>
        <if test="'instruction' == column.value">
          #{item.instruction,jdbcType=VARCHAR}
        </if>
        <if test="'brand' == column.value">
          #{item.brand,jdbcType=VARCHAR}
        </if>
        <if test="'cname' == column.value">
          #{item.cname,jdbcType=VARCHAR}
        </if>
        <if test="'remark' == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'processid' == column.value">
          #{item.processid,jdbcType=VARCHAR}
        </if>
        <if test="'ishas' == column.value">
          #{item.ishas,jdbcType=BIT}
        </if>
        <if test="'iscag' == column.value">
          #{item.iscag,jdbcType=BIT}
        </if>
        <if test="'skillsUrl' == column.value">
          #{item.skillsurl,jdbcType=VARCHAR}
        </if>
        <if test="'categoryStr' == column.value">
          #{item.categorystr,jdbcType=VARCHAR}
        </if>
        <if test="'likecount' == column.value">
          #{item.likecount,jdbcType=INTEGER}
        </if>
        <if test="'commentcount' == column.value">
          #{item.commentcount,jdbcType=INTEGER}
        </if>
        <if test="'notlikecount' == column.value">
          #{item.notlikecount,jdbcType=INTEGER}
        </if>
        <if test="'mid' == column.value">
          #{item.mid,jdbcType=VARCHAR}
        </if>
        <if test="'ismodify' == column.value">
          #{item.ismodify,jdbcType=BIT}
        </if>
        <if test="'new_goods_title' == column.value">
          #{item.newGoodsTitle,jdbcType=VARCHAR}
        </if>
        <if test="'doyenid' == column.value">
          #{item.doyenid,jdbcType=INTEGER}
        </if>
        <if test="'isdoyenmodify' == column.value">
          #{item.isdoyenmodify,jdbcType=INTEGER}
        </if>
        <if test="'price' == column.value">
          #{item.price,jdbcType=VARCHAR}
        </if>
        <if test="'capacity' == column.value">
          #{item.capacity,jdbcType=VARCHAR}
        </if>
        <if test="'sell_price' == column.value">
          #{item.sellPrice,jdbcType=DECIMAL}
        </if>
        <if test="'sell_capacity' == column.value">
          #{item.sellCapacity,jdbcType=VARCHAR}
        </if>
        <if test="'hidden_skin' == column.value">
          #{item.hiddenSkin,jdbcType=INTEGER}
        </if>
        <if test="'cps_type' == column.value">
          #{item.cpsType,jdbcType=VARCHAR}
        </if>
        <if test="'price_unit' == column.value">
          #{item.priceUnit,jdbcType=INTEGER}
        </if>
        <if test="'content' == column.value">
          #{item.content,jdbcType=LONGVARCHAR}
        </if>
        <if test="'explainz' == column.value">
          #{item.explainz,jdbcType=LONGVARCHAR}
        </if>
        <if test="'gcsort' == column.value">
          #{item.gcsort,jdbcType=LONGVARCHAR}
        </if>
        <if test="'tips' == column.value">
          #{item.tips,jdbcType=LONGVARCHAR}
        </if>
        <if test="'doyencomment' == column.value">
          #{item.doyencomment,jdbcType=LONGVARCHAR}
        </if>
        <if test="'cps' == column.value">
          #{item.cps,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="cn.bevol.statics.dao.GoodsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>