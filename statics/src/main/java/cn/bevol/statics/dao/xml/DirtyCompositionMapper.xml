<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bevol.statics.dao.mapper.DirtyCompositionMapper">
  <resultMap id="BaseResultMap" type="cn.bevol.statics.dao.DirtyComposition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="crdate" jdbcType="TIMESTAMP" property="crdate" />
    <result column="tstamp" jdbcType="TIMESTAMP" property="tstamp" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="alias" jdbcType="INTEGER" property="alias" />
    <result column="cm_name" jdbcType="VARCHAR" property="cmName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, pid, crdate, tstamp, delete_status, alias, cm_name
  </sql>
  <select id="selectByExample" parameterType="cn.bevol.statics.dao.DirtyCompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_dirty_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from hq_dirty_composition
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.bevol.statics.dao.DirtyComposition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_dirty_composition (name, pid, crdate, 
      tstamp, delete_status, alias, 
      cm_name)
    values (#{name,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{crdate,jdbcType=TIMESTAMP}, 
      #{tstamp,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}, #{alias,jdbcType=INTEGER}, 
      #{cmName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bevol.statics.dao.DirtyComposition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_dirty_composition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="crdate != null">
        crdate,
      </if>
      <if test="tstamp != null">
        tstamp,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="cmName != null">
        cm_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        #{crdate,jdbcType=TIMESTAMP},
      </if>
      <if test="tstamp != null">
        #{tstamp,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=INTEGER},
      </if>
      <if test="cmName != null">
        #{cmName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bevol.statics.dao.DirtyCompositionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from hq_dirty_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_dirty_composition
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.crdate != null">
        crdate = #{record.crdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tstamp != null">
        tstamp = #{record.tstamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=INTEGER},
      </if>
      <if test="record.cmName != null">
        cm_name = #{record.cmName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_dirty_composition
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      crdate = #{record.crdate,jdbcType=TIMESTAMP},
      tstamp = #{record.tstamp,jdbcType=TIMESTAMP},
      delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      alias = #{record.alias,jdbcType=INTEGER},
      cm_name = #{record.cmName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bevol.statics.dao.DirtyComposition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_dirty_composition
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        crdate = #{crdate,jdbcType=TIMESTAMP},
      </if>
      <if test="tstamp != null">
        tstamp = #{tstamp,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=INTEGER},
      </if>
      <if test="cmName != null">
        cm_name = #{cmName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bevol.statics.dao.DirtyComposition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_dirty_composition
    set name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      crdate = #{crdate,jdbcType=TIMESTAMP},
      tstamp = #{tstamp,jdbcType=TIMESTAMP},
      delete_status = #{deleteStatus,jdbcType=INTEGER},
      alias = #{alias,jdbcType=INTEGER},
      cm_name = #{cmName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.bevol.statics.dao.DirtyCompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_dirty_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_dirty_composition
    (name, pid, crdate, tstamp, delete_status, alias, cm_name)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.pid,jdbcType=INTEGER}, #{item.crdate,jdbcType=TIMESTAMP}, 
        #{item.tstamp,jdbcType=TIMESTAMP}, #{item.deleteStatus,jdbcType=INTEGER}, #{item.alias,jdbcType=INTEGER}, 
        #{item.cmName,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_dirty_composition (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'pid' == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
        <if test="'crdate' == column.value">
          #{item.crdate,jdbcType=TIMESTAMP}
        </if>
        <if test="'tstamp' == column.value">
          #{item.tstamp,jdbcType=TIMESTAMP}
        </if>
        <if test="'delete_status' == column.value">
          #{item.deleteStatus,jdbcType=INTEGER}
        </if>
        <if test="'alias' == column.value">
          #{item.alias,jdbcType=INTEGER}
        </if>
        <if test="'cm_name' == column.value">
          #{item.cmName,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="cn.bevol.statics.dao.DirtyCompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from hq_dirty_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>