<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bevol.internal.dao.mapper.CompositionMapper">
  <resultMap id="BaseResultMap" type="cn.bevol.internal.dao.Composition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tstamp" jdbcType="INTEGER" property="tstamp" />
    <result column="crdate" jdbcType="INTEGER" property="crdate" />
    <result column="cruser_id" jdbcType="INTEGER" property="cruserId" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="hidden" jdbcType="INTEGER" property="hidden" />
    <result column="sorting" jdbcType="INTEGER" property="sorting" />
    <result column="hit" jdbcType="INTEGER" property="hit" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="top" jdbcType="INTEGER" property="top" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="efficacy" jdbcType="VARCHAR" property="efficacy" />
    <result column="english" jdbcType="VARCHAR" property="english" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="active" jdbcType="VARCHAR" property="active" />
    <result column="safety" jdbcType="VARCHAR" property="safety" />
    <result column="acne_risk" jdbcType="INTEGER" property="acneRisk" />
    <result column="cas" jdbcType="VARCHAR" property="cas" />
    <result column="other_title" jdbcType="VARCHAR" property="otherTitle" />
    <result column="used_num" jdbcType="INTEGER" property="usedNum" />
    <result column="shenyong" jdbcType="VARCHAR" property="shenyong" />
    <result column="used" jdbcType="VARCHAR" property="used" />
    <result column="used_name" jdbcType="VARCHAR" property="usedName" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="likecount" jdbcType="INTEGER" property="likecount" />
    <result column="commentcount" jdbcType="INTEGER" property="commentcount" />
    <result column="OSPW" jdbcType="VARCHAR" property="ospw" />
    <result column="OSPT" jdbcType="VARCHAR" property="ospt" />
    <result column="OSNW" jdbcType="VARCHAR" property="osnw" />
    <result column="OSNT" jdbcType="VARCHAR" property="osnt" />
    <result column="ORPW" jdbcType="VARCHAR" property="orpw" />
    <result column="ORNW" jdbcType="VARCHAR" property="ornw" />
    <result column="ORNT" jdbcType="VARCHAR" property="ornt" />
    <result column="DSPW" jdbcType="VARCHAR" property="dspw" />
    <result column="DSPT" jdbcType="VARCHAR" property="dspt" />
    <result column="DSNW" jdbcType="VARCHAR" property="dsnw" />
    <result column="DSNT" jdbcType="VARCHAR" property="dsnt" />
    <result column="DRPW" jdbcType="VARCHAR" property="drpw" />
    <result column="DRPT" jdbcType="VARCHAR" property="drpt" />
    <result column="DRNW" jdbcType="VARCHAR" property="drnw" />
    <result column="DRNT" jdbcType="VARCHAR" property="drnt" />
    <result column="ORPT" jdbcType="VARCHAR" property="orpt" />
    <result column="mid" jdbcType="VARCHAR" property="mid" />
    <result column="mpid" jdbcType="VARCHAR" property="mpid" />
    <result column="namelength" jdbcType="INTEGER" property="namelength" />
    <result column="u1" jdbcType="INTEGER" property="u1" />
    <result column="reserve" jdbcType="INTEGER" property="reserve" />
    <result column="cm_name" jdbcType="VARCHAR" property="cmName" />
    <result column="cm_english" jdbcType="VARCHAR" property="cmEnglish" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.bevol.internal.dao.CompositionWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="namejp" jdbcType="LONGVARCHAR" property="namejp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, tstamp, crdate, cruser_id, deleted, hidden, sorting, hit, hot, top, name, efficacy, 
    english, frequency, active, safety, acne_risk, cas, other_title, used_num, shenyong, 
    used, used_name, pid, likecount, commentcount, OSPW, OSPT, OSNW, OSNT, ORPW, ORNW, 
    ORNT, DSPW, DSPT, DSNW, DSNT, DRPW, DRPT, DRNW, DRNT, ORPT, mid, mpid, namelength, 
    u1, reserve, cm_name, cm_english
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    remark, namejp
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_composition
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.bevol.internal.dao.CompositionWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_composition (tstamp, crdate, cruser_id, 
      deleted, hidden, sorting, 
      hit, hot, top, name, 
      efficacy, english, frequency, 
      active, safety, acne_risk, 
      cas, other_title, used_num, 
      shenyong, used, used_name, 
      pid, likecount, commentcount, 
      OSPW, OSPT, OSNW, OSNT, 
      ORPW, ORNW, ORNT, DSPW, 
      DSPT, DSNW, DSNT, DRPW, 
      DRPT, DRNW, DRNT, ORPT, 
      mid, mpid, namelength, 
      u1, reserve, cm_name, 
      cm_english, remark, namejp
      )
    values (#{tstamp,jdbcType=INTEGER}, #{crdate,jdbcType=INTEGER}, #{cruserId,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER}, #{hidden,jdbcType=INTEGER}, #{sorting,jdbcType=INTEGER}, 
      #{hit,jdbcType=INTEGER}, #{hot,jdbcType=INTEGER}, #{top,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{efficacy,jdbcType=VARCHAR}, #{english,jdbcType=VARCHAR}, #{frequency,jdbcType=INTEGER}, 
      #{active,jdbcType=VARCHAR}, #{safety,jdbcType=VARCHAR}, #{acneRisk,jdbcType=INTEGER}, 
      #{cas,jdbcType=VARCHAR}, #{otherTitle,jdbcType=VARCHAR}, #{usedNum,jdbcType=INTEGER}, 
      #{shenyong,jdbcType=VARCHAR}, #{used,jdbcType=VARCHAR}, #{usedName,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{likecount,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, 
      #{ospw,jdbcType=VARCHAR}, #{ospt,jdbcType=VARCHAR}, #{osnw,jdbcType=VARCHAR}, #{osnt,jdbcType=VARCHAR}, 
      #{orpw,jdbcType=VARCHAR}, #{ornw,jdbcType=VARCHAR}, #{ornt,jdbcType=VARCHAR}, #{dspw,jdbcType=VARCHAR}, 
      #{dspt,jdbcType=VARCHAR}, #{dsnw,jdbcType=VARCHAR}, #{dsnt,jdbcType=VARCHAR}, #{drpw,jdbcType=VARCHAR}, 
      #{drpt,jdbcType=VARCHAR}, #{drnw,jdbcType=VARCHAR}, #{drnt,jdbcType=VARCHAR}, #{orpt,jdbcType=VARCHAR}, 
      #{mid,jdbcType=VARCHAR}, #{mpid,jdbcType=VARCHAR}, #{namelength,jdbcType=INTEGER}, 
      #{u1,jdbcType=INTEGER}, #{reserve,jdbcType=INTEGER}, #{cmName,jdbcType=VARCHAR}, 
      #{cmEnglish,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR}, #{namejp,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bevol.internal.dao.CompositionWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hq_composition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tstamp != null">
        tstamp,
      </if>
      <if test="crdate != null">
        crdate,
      </if>
      <if test="cruserId != null">
        cruser_id,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="sorting != null">
        sorting,
      </if>
      <if test="hit != null">
        hit,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="top != null">
        top,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="efficacy != null">
        efficacy,
      </if>
      <if test="english != null">
        english,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="safety != null">
        safety,
      </if>
      <if test="acneRisk != null">
        acne_risk,
      </if>
      <if test="cas != null">
        cas,
      </if>
      <if test="otherTitle != null">
        other_title,
      </if>
      <if test="usedNum != null">
        used_num,
      </if>
      <if test="shenyong != null">
        shenyong,
      </if>
      <if test="used != null">
        used,
      </if>
      <if test="usedName != null">
        used_name,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="likecount != null">
        likecount,
      </if>
      <if test="commentcount != null">
        commentcount,
      </if>
      <if test="ospw != null">
        OSPW,
      </if>
      <if test="ospt != null">
        OSPT,
      </if>
      <if test="osnw != null">
        OSNW,
      </if>
      <if test="osnt != null">
        OSNT,
      </if>
      <if test="orpw != null">
        ORPW,
      </if>
      <if test="ornw != null">
        ORNW,
      </if>
      <if test="ornt != null">
        ORNT,
      </if>
      <if test="dspw != null">
        DSPW,
      </if>
      <if test="dspt != null">
        DSPT,
      </if>
      <if test="dsnw != null">
        DSNW,
      </if>
      <if test="dsnt != null">
        DSNT,
      </if>
      <if test="drpw != null">
        DRPW,
      </if>
      <if test="drpt != null">
        DRPT,
      </if>
      <if test="drnw != null">
        DRNW,
      </if>
      <if test="drnt != null">
        DRNT,
      </if>
      <if test="orpt != null">
        ORPT,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="mpid != null">
        mpid,
      </if>
      <if test="namelength != null">
        namelength,
      </if>
      <if test="u1 != null">
        u1,
      </if>
      <if test="reserve != null">
        reserve,
      </if>
      <if test="cmName != null">
        cm_name,
      </if>
      <if test="cmEnglish != null">
        cm_english,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="namejp != null">
        namejp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tstamp != null">
        #{tstamp,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        #{crdate,jdbcType=INTEGER},
      </if>
      <if test="cruserId != null">
        #{cruserId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=INTEGER},
      </if>
      <if test="sorting != null">
        #{sorting,jdbcType=INTEGER},
      </if>
      <if test="hit != null">
        #{hit,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        #{top,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="efficacy != null">
        #{efficacy,jdbcType=VARCHAR},
      </if>
      <if test="english != null">
        #{english,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=VARCHAR},
      </if>
      <if test="safety != null">
        #{safety,jdbcType=VARCHAR},
      </if>
      <if test="acneRisk != null">
        #{acneRisk,jdbcType=INTEGER},
      </if>
      <if test="cas != null">
        #{cas,jdbcType=VARCHAR},
      </if>
      <if test="otherTitle != null">
        #{otherTitle,jdbcType=VARCHAR},
      </if>
      <if test="usedNum != null">
        #{usedNum,jdbcType=INTEGER},
      </if>
      <if test="shenyong != null">
        #{shenyong,jdbcType=VARCHAR},
      </if>
      <if test="used != null">
        #{used,jdbcType=VARCHAR},
      </if>
      <if test="usedName != null">
        #{usedName,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="likecount != null">
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="ospw != null">
        #{ospw,jdbcType=VARCHAR},
      </if>
      <if test="ospt != null">
        #{ospt,jdbcType=VARCHAR},
      </if>
      <if test="osnw != null">
        #{osnw,jdbcType=VARCHAR},
      </if>
      <if test="osnt != null">
        #{osnt,jdbcType=VARCHAR},
      </if>
      <if test="orpw != null">
        #{orpw,jdbcType=VARCHAR},
      </if>
      <if test="ornw != null">
        #{ornw,jdbcType=VARCHAR},
      </if>
      <if test="ornt != null">
        #{ornt,jdbcType=VARCHAR},
      </if>
      <if test="dspw != null">
        #{dspw,jdbcType=VARCHAR},
      </if>
      <if test="dspt != null">
        #{dspt,jdbcType=VARCHAR},
      </if>
      <if test="dsnw != null">
        #{dsnw,jdbcType=VARCHAR},
      </if>
      <if test="dsnt != null">
        #{dsnt,jdbcType=VARCHAR},
      </if>
      <if test="drpw != null">
        #{drpw,jdbcType=VARCHAR},
      </if>
      <if test="drpt != null">
        #{drpt,jdbcType=VARCHAR},
      </if>
      <if test="drnw != null">
        #{drnw,jdbcType=VARCHAR},
      </if>
      <if test="drnt != null">
        #{drnt,jdbcType=VARCHAR},
      </if>
      <if test="orpt != null">
        #{orpt,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="mpid != null">
        #{mpid,jdbcType=VARCHAR},
      </if>
      <if test="namelength != null">
        #{namelength,jdbcType=INTEGER},
      </if>
      <if test="u1 != null">
        #{u1,jdbcType=INTEGER},
      </if>
      <if test="reserve != null">
        #{reserve,jdbcType=INTEGER},
      </if>
      <if test="cmName != null">
        #{cmName,jdbcType=VARCHAR},
      </if>
      <if test="cmEnglish != null">
        #{cmEnglish,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="namejp != null">
        #{namejp,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bevol.internal.dao.CompositionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tstamp != null">
        tstamp = #{record.tstamp,jdbcType=INTEGER},
      </if>
      <if test="record.crdate != null">
        crdate = #{record.crdate,jdbcType=INTEGER},
      </if>
      <if test="record.cruserId != null">
        cruser_id = #{record.cruserId,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.hidden != null">
        hidden = #{record.hidden,jdbcType=INTEGER},
      </if>
      <if test="record.sorting != null">
        sorting = #{record.sorting,jdbcType=INTEGER},
      </if>
      <if test="record.hit != null">
        hit = #{record.hit,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.top != null">
        top = #{record.top,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.efficacy != null">
        efficacy = #{record.efficacy,jdbcType=VARCHAR},
      </if>
      <if test="record.english != null">
        english = #{record.english,jdbcType=VARCHAR},
      </if>
      <if test="record.frequency != null">
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=VARCHAR},
      </if>
      <if test="record.safety != null">
        safety = #{record.safety,jdbcType=VARCHAR},
      </if>
      <if test="record.acneRisk != null">
        acne_risk = #{record.acneRisk,jdbcType=INTEGER},
      </if>
      <if test="record.cas != null">
        cas = #{record.cas,jdbcType=VARCHAR},
      </if>
      <if test="record.otherTitle != null">
        other_title = #{record.otherTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.usedNum != null">
        used_num = #{record.usedNum,jdbcType=INTEGER},
      </if>
      <if test="record.shenyong != null">
        shenyong = #{record.shenyong,jdbcType=VARCHAR},
      </if>
      <if test="record.used != null">
        used = #{record.used,jdbcType=VARCHAR},
      </if>
      <if test="record.usedName != null">
        used_name = #{record.usedName,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.likecount != null">
        likecount = #{record.likecount,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null">
        commentcount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.ospw != null">
        OSPW = #{record.ospw,jdbcType=VARCHAR},
      </if>
      <if test="record.ospt != null">
        OSPT = #{record.ospt,jdbcType=VARCHAR},
      </if>
      <if test="record.osnw != null">
        OSNW = #{record.osnw,jdbcType=VARCHAR},
      </if>
      <if test="record.osnt != null">
        OSNT = #{record.osnt,jdbcType=VARCHAR},
      </if>
      <if test="record.orpw != null">
        ORPW = #{record.orpw,jdbcType=VARCHAR},
      </if>
      <if test="record.ornw != null">
        ORNW = #{record.ornw,jdbcType=VARCHAR},
      </if>
      <if test="record.ornt != null">
        ORNT = #{record.ornt,jdbcType=VARCHAR},
      </if>
      <if test="record.dspw != null">
        DSPW = #{record.dspw,jdbcType=VARCHAR},
      </if>
      <if test="record.dspt != null">
        DSPT = #{record.dspt,jdbcType=VARCHAR},
      </if>
      <if test="record.dsnw != null">
        DSNW = #{record.dsnw,jdbcType=VARCHAR},
      </if>
      <if test="record.dsnt != null">
        DSNT = #{record.dsnt,jdbcType=VARCHAR},
      </if>
      <if test="record.drpw != null">
        DRPW = #{record.drpw,jdbcType=VARCHAR},
      </if>
      <if test="record.drpt != null">
        DRPT = #{record.drpt,jdbcType=VARCHAR},
      </if>
      <if test="record.drnw != null">
        DRNW = #{record.drnw,jdbcType=VARCHAR},
      </if>
      <if test="record.drnt != null">
        DRNT = #{record.drnt,jdbcType=VARCHAR},
      </if>
      <if test="record.orpt != null">
        ORPT = #{record.orpt,jdbcType=VARCHAR},
      </if>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=VARCHAR},
      </if>
      <if test="record.mpid != null">
        mpid = #{record.mpid,jdbcType=VARCHAR},
      </if>
      <if test="record.namelength != null">
        namelength = #{record.namelength,jdbcType=INTEGER},
      </if>
      <if test="record.u1 != null">
        u1 = #{record.u1,jdbcType=INTEGER},
      </if>
      <if test="record.reserve != null">
        reserve = #{record.reserve,jdbcType=INTEGER},
      </if>
      <if test="record.cmName != null">
        cm_name = #{record.cmName,jdbcType=VARCHAR},
      </if>
      <if test="record.cmEnglish != null">
        cm_english = #{record.cmEnglish,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.namejp != null">
        namejp = #{record.namejp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    set id = #{record.id,jdbcType=INTEGER},
      tstamp = #{record.tstamp,jdbcType=INTEGER},
      crdate = #{record.crdate,jdbcType=INTEGER},
      cruser_id = #{record.cruserId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER},
      hidden = #{record.hidden,jdbcType=INTEGER},
      sorting = #{record.sorting,jdbcType=INTEGER},
      hit = #{record.hit,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      efficacy = #{record.efficacy,jdbcType=VARCHAR},
      english = #{record.english,jdbcType=VARCHAR},
      frequency = #{record.frequency,jdbcType=INTEGER},
      active = #{record.active,jdbcType=VARCHAR},
      safety = #{record.safety,jdbcType=VARCHAR},
      acne_risk = #{record.acneRisk,jdbcType=INTEGER},
      cas = #{record.cas,jdbcType=VARCHAR},
      other_title = #{record.otherTitle,jdbcType=VARCHAR},
      used_num = #{record.usedNum,jdbcType=INTEGER},
      shenyong = #{record.shenyong,jdbcType=VARCHAR},
      used = #{record.used,jdbcType=VARCHAR},
      used_name = #{record.usedName,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      likecount = #{record.likecount,jdbcType=INTEGER},
      commentcount = #{record.commentcount,jdbcType=INTEGER},
      OSPW = #{record.ospw,jdbcType=VARCHAR},
      OSPT = #{record.ospt,jdbcType=VARCHAR},
      OSNW = #{record.osnw,jdbcType=VARCHAR},
      OSNT = #{record.osnt,jdbcType=VARCHAR},
      ORPW = #{record.orpw,jdbcType=VARCHAR},
      ORNW = #{record.ornw,jdbcType=VARCHAR},
      ORNT = #{record.ornt,jdbcType=VARCHAR},
      DSPW = #{record.dspw,jdbcType=VARCHAR},
      DSPT = #{record.dspt,jdbcType=VARCHAR},
      DSNW = #{record.dsnw,jdbcType=VARCHAR},
      DSNT = #{record.dsnt,jdbcType=VARCHAR},
      DRPW = #{record.drpw,jdbcType=VARCHAR},
      DRPT = #{record.drpt,jdbcType=VARCHAR},
      DRNW = #{record.drnw,jdbcType=VARCHAR},
      DRNT = #{record.drnt,jdbcType=VARCHAR},
      ORPT = #{record.orpt,jdbcType=VARCHAR},
      mid = #{record.mid,jdbcType=VARCHAR},
      mpid = #{record.mpid,jdbcType=VARCHAR},
      namelength = #{record.namelength,jdbcType=INTEGER},
      u1 = #{record.u1,jdbcType=INTEGER},
      reserve = #{record.reserve,jdbcType=INTEGER},
      cm_name = #{record.cmName,jdbcType=VARCHAR},
      cm_english = #{record.cmEnglish,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      namejp = #{record.namejp,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    set id = #{record.id,jdbcType=INTEGER},
      tstamp = #{record.tstamp,jdbcType=INTEGER},
      crdate = #{record.crdate,jdbcType=INTEGER},
      cruser_id = #{record.cruserId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER},
      hidden = #{record.hidden,jdbcType=INTEGER},
      sorting = #{record.sorting,jdbcType=INTEGER},
      hit = #{record.hit,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      efficacy = #{record.efficacy,jdbcType=VARCHAR},
      english = #{record.english,jdbcType=VARCHAR},
      frequency = #{record.frequency,jdbcType=INTEGER},
      active = #{record.active,jdbcType=VARCHAR},
      safety = #{record.safety,jdbcType=VARCHAR},
      acne_risk = #{record.acneRisk,jdbcType=INTEGER},
      cas = #{record.cas,jdbcType=VARCHAR},
      other_title = #{record.otherTitle,jdbcType=VARCHAR},
      used_num = #{record.usedNum,jdbcType=INTEGER},
      shenyong = #{record.shenyong,jdbcType=VARCHAR},
      used = #{record.used,jdbcType=VARCHAR},
      used_name = #{record.usedName,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      likecount = #{record.likecount,jdbcType=INTEGER},
      commentcount = #{record.commentcount,jdbcType=INTEGER},
      OSPW = #{record.ospw,jdbcType=VARCHAR},
      OSPT = #{record.ospt,jdbcType=VARCHAR},
      OSNW = #{record.osnw,jdbcType=VARCHAR},
      OSNT = #{record.osnt,jdbcType=VARCHAR},
      ORPW = #{record.orpw,jdbcType=VARCHAR},
      ORNW = #{record.ornw,jdbcType=VARCHAR},
      ORNT = #{record.ornt,jdbcType=VARCHAR},
      DSPW = #{record.dspw,jdbcType=VARCHAR},
      DSPT = #{record.dspt,jdbcType=VARCHAR},
      DSNW = #{record.dsnw,jdbcType=VARCHAR},
      DSNT = #{record.dsnt,jdbcType=VARCHAR},
      DRPW = #{record.drpw,jdbcType=VARCHAR},
      DRPT = #{record.drpt,jdbcType=VARCHAR},
      DRNW = #{record.drnw,jdbcType=VARCHAR},
      DRNT = #{record.drnt,jdbcType=VARCHAR},
      ORPT = #{record.orpt,jdbcType=VARCHAR},
      mid = #{record.mid,jdbcType=VARCHAR},
      mpid = #{record.mpid,jdbcType=VARCHAR},
      namelength = #{record.namelength,jdbcType=INTEGER},
      u1 = #{record.u1,jdbcType=INTEGER},
      reserve = #{record.reserve,jdbcType=INTEGER},
      cm_name = #{record.cmName,jdbcType=VARCHAR},
      cm_english = #{record.cmEnglish,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bevol.internal.dao.CompositionWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    <set>
      <if test="tstamp != null">
        tstamp = #{tstamp,jdbcType=INTEGER},
      </if>
      <if test="crdate != null">
        crdate = #{crdate,jdbcType=INTEGER},
      </if>
      <if test="cruserId != null">
        cruser_id = #{cruserId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=INTEGER},
      </if>
      <if test="sorting != null">
        sorting = #{sorting,jdbcType=INTEGER},
      </if>
      <if test="hit != null">
        hit = #{hit,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        top = #{top,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="efficacy != null">
        efficacy = #{efficacy,jdbcType=VARCHAR},
      </if>
      <if test="english != null">
        english = #{english,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=VARCHAR},
      </if>
      <if test="safety != null">
        safety = #{safety,jdbcType=VARCHAR},
      </if>
      <if test="acneRisk != null">
        acne_risk = #{acneRisk,jdbcType=INTEGER},
      </if>
      <if test="cas != null">
        cas = #{cas,jdbcType=VARCHAR},
      </if>
      <if test="otherTitle != null">
        other_title = #{otherTitle,jdbcType=VARCHAR},
      </if>
      <if test="usedNum != null">
        used_num = #{usedNum,jdbcType=INTEGER},
      </if>
      <if test="shenyong != null">
        shenyong = #{shenyong,jdbcType=VARCHAR},
      </if>
      <if test="used != null">
        used = #{used,jdbcType=VARCHAR},
      </if>
      <if test="usedName != null">
        used_name = #{usedName,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="likecount != null">
        likecount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        commentcount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="ospw != null">
        OSPW = #{ospw,jdbcType=VARCHAR},
      </if>
      <if test="ospt != null">
        OSPT = #{ospt,jdbcType=VARCHAR},
      </if>
      <if test="osnw != null">
        OSNW = #{osnw,jdbcType=VARCHAR},
      </if>
      <if test="osnt != null">
        OSNT = #{osnt,jdbcType=VARCHAR},
      </if>
      <if test="orpw != null">
        ORPW = #{orpw,jdbcType=VARCHAR},
      </if>
      <if test="ornw != null">
        ORNW = #{ornw,jdbcType=VARCHAR},
      </if>
      <if test="ornt != null">
        ORNT = #{ornt,jdbcType=VARCHAR},
      </if>
      <if test="dspw != null">
        DSPW = #{dspw,jdbcType=VARCHAR},
      </if>
      <if test="dspt != null">
        DSPT = #{dspt,jdbcType=VARCHAR},
      </if>
      <if test="dsnw != null">
        DSNW = #{dsnw,jdbcType=VARCHAR},
      </if>
      <if test="dsnt != null">
        DSNT = #{dsnt,jdbcType=VARCHAR},
      </if>
      <if test="drpw != null">
        DRPW = #{drpw,jdbcType=VARCHAR},
      </if>
      <if test="drpt != null">
        DRPT = #{drpt,jdbcType=VARCHAR},
      </if>
      <if test="drnw != null">
        DRNW = #{drnw,jdbcType=VARCHAR},
      </if>
      <if test="drnt != null">
        DRNT = #{drnt,jdbcType=VARCHAR},
      </if>
      <if test="orpt != null">
        ORPT = #{orpt,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="mpid != null">
        mpid = #{mpid,jdbcType=VARCHAR},
      </if>
      <if test="namelength != null">
        namelength = #{namelength,jdbcType=INTEGER},
      </if>
      <if test="u1 != null">
        u1 = #{u1,jdbcType=INTEGER},
      </if>
      <if test="reserve != null">
        reserve = #{reserve,jdbcType=INTEGER},
      </if>
      <if test="cmName != null">
        cm_name = #{cmName,jdbcType=VARCHAR},
      </if>
      <if test="cmEnglish != null">
        cm_english = #{cmEnglish,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="namejp != null">
        namejp = #{namejp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bevol.internal.dao.CompositionWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    set tstamp = #{tstamp,jdbcType=INTEGER},
      crdate = #{crdate,jdbcType=INTEGER},
      cruser_id = #{cruserId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      hidden = #{hidden,jdbcType=INTEGER},
      sorting = #{sorting,jdbcType=INTEGER},
      hit = #{hit,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      efficacy = #{efficacy,jdbcType=VARCHAR},
      english = #{english,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=INTEGER},
      active = #{active,jdbcType=VARCHAR},
      safety = #{safety,jdbcType=VARCHAR},
      acne_risk = #{acneRisk,jdbcType=INTEGER},
      cas = #{cas,jdbcType=VARCHAR},
      other_title = #{otherTitle,jdbcType=VARCHAR},
      used_num = #{usedNum,jdbcType=INTEGER},
      shenyong = #{shenyong,jdbcType=VARCHAR},
      used = #{used,jdbcType=VARCHAR},
      used_name = #{usedName,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      likecount = #{likecount,jdbcType=INTEGER},
      commentcount = #{commentcount,jdbcType=INTEGER},
      OSPW = #{ospw,jdbcType=VARCHAR},
      OSPT = #{ospt,jdbcType=VARCHAR},
      OSNW = #{osnw,jdbcType=VARCHAR},
      OSNT = #{osnt,jdbcType=VARCHAR},
      ORPW = #{orpw,jdbcType=VARCHAR},
      ORNW = #{ornw,jdbcType=VARCHAR},
      ORNT = #{ornt,jdbcType=VARCHAR},
      DSPW = #{dspw,jdbcType=VARCHAR},
      DSPT = #{dspt,jdbcType=VARCHAR},
      DSNW = #{dsnw,jdbcType=VARCHAR},
      DSNT = #{dsnt,jdbcType=VARCHAR},
      DRPW = #{drpw,jdbcType=VARCHAR},
      DRPT = #{drpt,jdbcType=VARCHAR},
      DRNW = #{drnw,jdbcType=VARCHAR},
      DRNT = #{drnt,jdbcType=VARCHAR},
      ORPT = #{orpt,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=VARCHAR},
      mpid = #{mpid,jdbcType=VARCHAR},
      namelength = #{namelength,jdbcType=INTEGER},
      u1 = #{u1,jdbcType=INTEGER},
      reserve = #{reserve,jdbcType=INTEGER},
      cm_name = #{cmName,jdbcType=VARCHAR},
      cm_english = #{cmEnglish,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR},
      namejp = #{namejp,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bevol.internal.dao.Composition">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hq_composition
    set tstamp = #{tstamp,jdbcType=INTEGER},
      crdate = #{crdate,jdbcType=INTEGER},
      cruser_id = #{cruserId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      hidden = #{hidden,jdbcType=INTEGER},
      sorting = #{sorting,jdbcType=INTEGER},
      hit = #{hit,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      efficacy = #{efficacy,jdbcType=VARCHAR},
      english = #{english,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=INTEGER},
      active = #{active,jdbcType=VARCHAR},
      safety = #{safety,jdbcType=VARCHAR},
      acne_risk = #{acneRisk,jdbcType=INTEGER},
      cas = #{cas,jdbcType=VARCHAR},
      other_title = #{otherTitle,jdbcType=VARCHAR},
      used_num = #{usedNum,jdbcType=INTEGER},
      shenyong = #{shenyong,jdbcType=VARCHAR},
      used = #{used,jdbcType=VARCHAR},
      used_name = #{usedName,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      likecount = #{likecount,jdbcType=INTEGER},
      commentcount = #{commentcount,jdbcType=INTEGER},
      OSPW = #{ospw,jdbcType=VARCHAR},
      OSPT = #{ospt,jdbcType=VARCHAR},
      OSNW = #{osnw,jdbcType=VARCHAR},
      OSNT = #{osnt,jdbcType=VARCHAR},
      ORPW = #{orpw,jdbcType=VARCHAR},
      ORNW = #{ornw,jdbcType=VARCHAR},
      ORNT = #{ornt,jdbcType=VARCHAR},
      DSPW = #{dspw,jdbcType=VARCHAR},
      DSPT = #{dspt,jdbcType=VARCHAR},
      DSNW = #{dsnw,jdbcType=VARCHAR},
      DSNT = #{dsnt,jdbcType=VARCHAR},
      DRPW = #{drpw,jdbcType=VARCHAR},
      DRPT = #{drpt,jdbcType=VARCHAR},
      DRNW = #{drnw,jdbcType=VARCHAR},
      DRNT = #{drnt,jdbcType=VARCHAR},
      ORPT = #{orpt,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=VARCHAR},
      mpid = #{mpid,jdbcType=VARCHAR},
      namelength = #{namelength,jdbcType=INTEGER},
      u1 = #{u1,jdbcType=INTEGER},
      reserve = #{reserve,jdbcType=INTEGER},
      cm_name = #{cmName,jdbcType=VARCHAR},
      cm_english = #{cmEnglish,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_composition
    (tstamp, crdate, cruser_id, deleted, hidden, sorting, hit, hot, top, name, efficacy, 
      english, frequency, active, safety, acne_risk, cas, other_title, used_num, shenyong, 
      used, used_name, pid, likecount, commentcount, OSPW, OSPT, OSNW, OSNT, ORPW, ORNW, 
      ORNT, DSPW, DSPT, DSNW, DSNT, DRPW, DRPT, DRNW, DRNT, ORPT, mid, mpid, namelength, 
      u1, reserve, cm_name, cm_english, remark, namejp)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.tstamp,jdbcType=INTEGER}, #{item.crdate,jdbcType=INTEGER}, #{item.cruserId,jdbcType=INTEGER}, 
        #{item.deleted,jdbcType=INTEGER}, #{item.hidden,jdbcType=INTEGER}, #{item.sorting,jdbcType=INTEGER}, 
        #{item.hit,jdbcType=INTEGER}, #{item.hot,jdbcType=INTEGER}, #{item.top,jdbcType=INTEGER}, 
        #{item.name,jdbcType=VARCHAR}, #{item.efficacy,jdbcType=VARCHAR}, #{item.english,jdbcType=VARCHAR}, 
        #{item.frequency,jdbcType=INTEGER}, #{item.active,jdbcType=VARCHAR}, #{item.safety,jdbcType=VARCHAR}, 
        #{item.acneRisk,jdbcType=INTEGER}, #{item.cas,jdbcType=VARCHAR}, #{item.otherTitle,jdbcType=VARCHAR}, 
        #{item.usedNum,jdbcType=INTEGER}, #{item.shenyong,jdbcType=VARCHAR}, #{item.used,jdbcType=VARCHAR}, 
        #{item.usedName,jdbcType=VARCHAR}, #{item.pid,jdbcType=INTEGER}, #{item.likecount,jdbcType=INTEGER}, 
        #{item.commentcount,jdbcType=INTEGER}, #{item.ospw,jdbcType=VARCHAR}, #{item.ospt,jdbcType=VARCHAR}, 
        #{item.osnw,jdbcType=VARCHAR}, #{item.osnt,jdbcType=VARCHAR}, #{item.orpw,jdbcType=VARCHAR}, 
        #{item.ornw,jdbcType=VARCHAR}, #{item.ornt,jdbcType=VARCHAR}, #{item.dspw,jdbcType=VARCHAR}, 
        #{item.dspt,jdbcType=VARCHAR}, #{item.dsnw,jdbcType=VARCHAR}, #{item.dsnt,jdbcType=VARCHAR}, 
        #{item.drpw,jdbcType=VARCHAR}, #{item.drpt,jdbcType=VARCHAR}, #{item.drnw,jdbcType=VARCHAR}, 
        #{item.drnt,jdbcType=VARCHAR}, #{item.orpt,jdbcType=VARCHAR}, #{item.mid,jdbcType=VARCHAR}, 
        #{item.mpid,jdbcType=VARCHAR}, #{item.namelength,jdbcType=INTEGER}, #{item.u1,jdbcType=INTEGER}, 
        #{item.reserve,jdbcType=INTEGER}, #{item.cmName,jdbcType=VARCHAR}, #{item.cmEnglish,jdbcType=VARCHAR}, 
        #{item.remark,jdbcType=LONGVARCHAR}, #{item.namejp,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into hq_composition (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'tstamp' == column.value">
          #{item.tstamp,jdbcType=INTEGER}
        </if>
        <if test="'crdate' == column.value">
          #{item.crdate,jdbcType=INTEGER}
        </if>
        <if test="'cruser_id' == column.value">
          #{item.cruserId,jdbcType=INTEGER}
        </if>
        <if test="'deleted' == column.value">
          #{item.deleted,jdbcType=INTEGER}
        </if>
        <if test="'hidden' == column.value">
          #{item.hidden,jdbcType=INTEGER}
        </if>
        <if test="'sorting' == column.value">
          #{item.sorting,jdbcType=INTEGER}
        </if>
        <if test="'hit' == column.value">
          #{item.hit,jdbcType=INTEGER}
        </if>
        <if test="'hot' == column.value">
          #{item.hot,jdbcType=INTEGER}
        </if>
        <if test="'top' == column.value">
          #{item.top,jdbcType=INTEGER}
        </if>
        <if test="'name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'efficacy' == column.value">
          #{item.efficacy,jdbcType=VARCHAR}
        </if>
        <if test="'english' == column.value">
          #{item.english,jdbcType=VARCHAR}
        </if>
        <if test="'frequency' == column.value">
          #{item.frequency,jdbcType=INTEGER}
        </if>
        <if test="'active' == column.value">
          #{item.active,jdbcType=VARCHAR}
        </if>
        <if test="'safety' == column.value">
          #{item.safety,jdbcType=VARCHAR}
        </if>
        <if test="'acne_risk' == column.value">
          #{item.acneRisk,jdbcType=INTEGER}
        </if>
        <if test="'cas' == column.value">
          #{item.cas,jdbcType=VARCHAR}
        </if>
        <if test="'other_title' == column.value">
          #{item.otherTitle,jdbcType=VARCHAR}
        </if>
        <if test="'used_num' == column.value">
          #{item.usedNum,jdbcType=INTEGER}
        </if>
        <if test="'shenyong' == column.value">
          #{item.shenyong,jdbcType=VARCHAR}
        </if>
        <if test="'used' == column.value">
          #{item.used,jdbcType=VARCHAR}
        </if>
        <if test="'used_name' == column.value">
          #{item.usedName,jdbcType=VARCHAR}
        </if>
        <if test="'pid' == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
        <if test="'likecount' == column.value">
          #{item.likecount,jdbcType=INTEGER}
        </if>
        <if test="'commentcount' == column.value">
          #{item.commentcount,jdbcType=INTEGER}
        </if>
        <if test="'OSPW' == column.value">
          #{item.ospw,jdbcType=VARCHAR}
        </if>
        <if test="'OSPT' == column.value">
          #{item.ospt,jdbcType=VARCHAR}
        </if>
        <if test="'OSNW' == column.value">
          #{item.osnw,jdbcType=VARCHAR}
        </if>
        <if test="'OSNT' == column.value">
          #{item.osnt,jdbcType=VARCHAR}
        </if>
        <if test="'ORPW' == column.value">
          #{item.orpw,jdbcType=VARCHAR}
        </if>
        <if test="'ORNW' == column.value">
          #{item.ornw,jdbcType=VARCHAR}
        </if>
        <if test="'ORNT' == column.value">
          #{item.ornt,jdbcType=VARCHAR}
        </if>
        <if test="'DSPW' == column.value">
          #{item.dspw,jdbcType=VARCHAR}
        </if>
        <if test="'DSPT' == column.value">
          #{item.dspt,jdbcType=VARCHAR}
        </if>
        <if test="'DSNW' == column.value">
          #{item.dsnw,jdbcType=VARCHAR}
        </if>
        <if test="'DSNT' == column.value">
          #{item.dsnt,jdbcType=VARCHAR}
        </if>
        <if test="'DRPW' == column.value">
          #{item.drpw,jdbcType=VARCHAR}
        </if>
        <if test="'DRPT' == column.value">
          #{item.drpt,jdbcType=VARCHAR}
        </if>
        <if test="'DRNW' == column.value">
          #{item.drnw,jdbcType=VARCHAR}
        </if>
        <if test="'DRNT' == column.value">
          #{item.drnt,jdbcType=VARCHAR}
        </if>
        <if test="'ORPT' == column.value">
          #{item.orpt,jdbcType=VARCHAR}
        </if>
        <if test="'mid' == column.value">
          #{item.mid,jdbcType=VARCHAR}
        </if>
        <if test="'mpid' == column.value">
          #{item.mpid,jdbcType=VARCHAR}
        </if>
        <if test="'namelength' == column.value">
          #{item.namelength,jdbcType=INTEGER}
        </if>
        <if test="'u1' == column.value">
          #{item.u1,jdbcType=INTEGER}
        </if>
        <if test="'reserve' == column.value">
          #{item.reserve,jdbcType=INTEGER}
        </if>
        <if test="'cm_name' == column.value">
          #{item.cmName,jdbcType=VARCHAR}
        </if>
        <if test="'cm_english' == column.value">
          #{item.cmEnglish,jdbcType=VARCHAR}
        </if>
        <if test="'remark' == column.value">
          #{item.remark,jdbcType=LONGVARCHAR}
        </if>
        <if test="'namejp' == column.value">
          #{item.namejp,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="cn.bevol.internal.dao.CompositionExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hq_composition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>